// Code generated by mockery v2.42.2. DO NOT EDIT.

package tests

import mock "github.com/stretchr/testify/mock"

// MockFakeEventVisitor is an autogenerated mock type for the FakeEventVisitor type
type MockFakeEventVisitor struct {
	mock.Mock
}

type MockFakeEventVisitor_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFakeEventVisitor) EXPECT() *MockFakeEventVisitor_Expecter {
	return &MockFakeEventVisitor_Expecter{mock: &_m.Mock}
}

// VisitFakeEvent provides a mock function with given fields: e
func (_m *MockFakeEventVisitor) VisitFakeEvent(e FakeEvent) error {
	ret := _m.Called(e)

	if len(ret) == 0 {
		panic("no return value specified for VisitFakeEvent")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(FakeEvent) error); ok {
		r0 = rf(e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFakeEventVisitor_VisitFakeEvent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VisitFakeEvent'
type MockFakeEventVisitor_VisitFakeEvent_Call struct {
	*mock.Call
}

// VisitFakeEvent is a helper method to define mock.On call
//   - e FakeEvent
func (_e *MockFakeEventVisitor_Expecter) VisitFakeEvent(e interface{}) *MockFakeEventVisitor_VisitFakeEvent_Call {
	return &MockFakeEventVisitor_VisitFakeEvent_Call{Call: _e.mock.On("VisitFakeEvent", e)}
}

func (_c *MockFakeEventVisitor_VisitFakeEvent_Call) Run(run func(e FakeEvent)) *MockFakeEventVisitor_VisitFakeEvent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(FakeEvent))
	})
	return _c
}

func (_c *MockFakeEventVisitor_VisitFakeEvent_Call) Return(_a0 error) *MockFakeEventVisitor_VisitFakeEvent_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFakeEventVisitor_VisitFakeEvent_Call) RunAndReturn(run func(FakeEvent) error) *MockFakeEventVisitor_VisitFakeEvent_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFakeEventVisitor creates a new instance of MockFakeEventVisitor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFakeEventVisitor(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFakeEventVisitor {
	mock := &MockFakeEventVisitor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
