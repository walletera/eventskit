// Code generated by mockery v2.14.0. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// MockEventsDeserializer is an autogenerated mock type for the EventsDeserializer type
type MockEventsDeserializer struct {
	mock.Mock
}

// Deserialize provides a mock function with given fields: message
func (_m *MockEventsDeserializer) Deserialize(message Message) (interface{}, error) {
	ret := _m.Called(message)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(Message) interface{}); ok {
		r0 = rf(message)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(Message) error); ok {
		r1 = rf(message)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockEventsDeserializer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEventsDeserializer creates a new instance of MockEventsDeserializer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEventsDeserializer(t mockConstructorTestingTNewMockEventsDeserializer) *MockEventsDeserializer {
	mock := &MockEventsDeserializer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
